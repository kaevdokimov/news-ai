networks:
    backend:
        name: news_ai_backend
        driver: bridge

services:
    # --- NGINX (Frontend Gateway) ---
    news_ai_nginx:
        container_name: news_ai_nginx
        image: nginx:1.29-alpine3.22
        restart: unless-stopped
        networks:
            - backend
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./.docker/nginx/default-production.conf:/etc/nginx/templates/default.conf.template:ro
            - ./:/var/www/app:ro
            - ./certbot/conf:/etc/nginx/certs:ro
            - ./certbot/www:/var/www/certbot:ro
        environment:
            - NGINX_HOST=signalscan.ru
            - NGINX_PORT=80
        depends_on:
            news_ai_app:
                condition: service_healthy

    # --- PHP-FPM (Backend App) ---
    news_ai_app:
        container_name: news_ai_app
        image: ${DOCKER_IMAGE}
        restart: unless-stopped
        networks:
            - backend
        environment:
            APP_ENV: prod
            APP_DEBUG: 0
            APP_SECRET: ${APP_SECRET}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_VERSION: ${POSTGRES_VERSION:-16}
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@news_ai_pg:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION:-16}&charset=utf8
            MESSENGER_TRANSPORT_DSN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@news_ai_rabbitmq:5672/%2f/messages
            REDIS_URL: redis://news_ai_redis:6379
            CORS_ALLOW_ORIGIN: ^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
            DEFAULT_URI: ${DEFAULT_URI:-https://signalscan.ru}
        depends_on:
            news_ai_pg:
                condition: service_healthy
            news_ai_rabbitmq:
                condition: service_healthy
            news_ai_redis:
                condition: service_started
        volumes:
            - ./public:/var/www/app/public:ro
            - ./var:/var/www/app/var:rw
        working_dir: /var/www/app
        healthcheck:
            test: ["CMD", "php", "-v"]
            interval: 30s
            timeout: 10s
            retries: 3

    # --- PostgreSQL ---
    news_ai_pg:
        container_name: news_ai_pg
        image: postgres:${POSTGRES_VERSION:-18}-alpine3.22
        restart: unless-stopped
        networks:
            - backend
        environment:
            POSTGRES_INITDB_ARGS: "--data-checksums"
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST_AUTH_METHOD: md5
        ports:
            - "5434:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        volumes:
            - postgres_data:/var/lib/postgresql/data:rw
            - ./.docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
            - ./.docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
        command: >
            -c config_file=/etc/postgresql/postgresql.conf
            -c hba_file=/etc/postgresql/pg_hba.conf

    # --- Redis ---
    news_ai_redis:
        container_name: news_ai_redis
        image: redis:8.2-alpine3.22
        restart: unless-stopped
        networks:
            - backend
        volumes:
            - redis_data:/data
        command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    # --- RabbitMQ ---
    news_ai_rabbitmq:
        container_name: news_ai_rabbitmq
        image: rabbitmq:${RABBITMQ_SERVER_VERSION:-4.1.4}-management-alpine
        restart: unless-stopped
        networks:
            - backend
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rabbitmq}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-rabbitmq}
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq:rw
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "check_running"]
            interval: 20s
            timeout: 10s
            retries: 5

    # --- Certbot (Let's Encrypt renewal) ---
    certbot:
        container_name: news_ai_certbot
        image: certbot/certbot:latest
        restart: unless-stopped
        networks:
            - backend
        depends_on:
            news_ai_nginx:
                condition: service_started
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: >
            /bin/sh -c "trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;"

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local
    rabbitmq_data:
        driver: local
