FROM ghcr.io/kaevdokimov/php:php84

# Build arguments
ARG APP_DIR=/var/www/app

# Environment variables
ENV APP_DIR=${APP_DIR} \
    APP_ENV=prod \
    APP_DEBUG=0

USER root

# Create app directory
RUN mkdir -p ${APP_DIR} && chown www-data:www-data ${APP_DIR}

# Copy only composer files for dependency install layer
COPY --chown=www-data:www-data composer.json composer.lock symfony.lock ${APP_DIR}/

# Install system dependencies and composer
RUN apk add --no-cache git unzip curl bash supervisor dcron su-exec netcat-openbsd openssl \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

WORKDIR ${APP_DIR}

# Install dependencies (no dev)
RUN composer install --prefer-dist --no-dev --no-scripts --no-progress --optimize-autoloader --no-interaction

# Copy application files
COPY --chown=www-data:www-data \
    assets/ bin/ config/ migrations/ public/ src/ templates/ translations/ ${APP_DIR}/

# PHP configuration and scripts
COPY .docker/app/php/fpm/php.ini /usr/local/etc/php/php.ini
COPY --chown=www-data:www-data .docker/app/cmd.sh ${APP_DIR}/.docker/app/cmd.sh
COPY --chown=www-data:www-data .docker/app/entrypoint.sh /entrypoint.sh
COPY --chown=www-data:www-data .docker/app/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

RUN chmod +x /entrypoint.sh ${APP_DIR}/.docker/app/cmd.sh && \
    mkdir -p var/cache var/log var/cache/prod /var/log/supervisord /var/log/cron && \
    touch /var/log/supervisord/supervisord.log /var/log/cron/cron.log && \
    chown -R www-data:www-data var /var/log/supervisord /var/log/cron && \
    chmod -R 777 var /var/log/supervisord /var/log/cron && \
    echo "*/5 * * * * /usr/local/bin/php /var/www/app/bin/console app:parse-rss >> /var/log/cron/cron.log 2>&1" > /etc/crontabs/root

ENTRYPOINT ["/entrypoint.sh"]

USER root

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
