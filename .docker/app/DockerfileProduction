FROM ghcr.io/kaevdokimov/php:php84

# Build arguments
ARG APP_DIR=/var/www/app

# Environment variables
ENV APP_DIR=${APP_DIR} \
    APP_ENV=prod \
    APP_DEBUG=0

# Create app directory as root
USER root
RUN mkdir -p ${APP_DIR} && chown www-data:www-data ${APP_DIR}

# Copy only necessary files
COPY --chown=www-data:www-data \
    composer.json \
    composer.lock \
    symfony.lock \
    .env \
    ${APP_DIR}/

# Install Composer and system dependencies (Alpine Linux)
USER root
RUN apk add --no-cache git unzip curl \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && chmod +x /usr/local/bin/composer

# Install production dependencies
WORKDIR ${APP_DIR}
RUN composer install --prefer-dist --no-dev --no-scripts --no-progress --optimize-autoloader --no-interaction \
    && chown -R www-data:www-data ${APP_DIR}/vendor

# Copy remaining application files
COPY --chown=www-data:www-data assets/ ${APP_DIR}/assets/
COPY --chown=www-data:www-data bin/ ${APP_DIR}/bin/
COPY --chown=www-data:www-data config/ ${APP_DIR}/config/
COPY --chown=www-data:www-data migrations/ ${APP_DIR}/migrations/
COPY --chown=www-data:www-data public/ ${APP_DIR}/public/
COPY --chown=www-data:www-data src/ ${APP_DIR}/src/
COPY --chown=www-data:www-data templates/ ${APP_DIR}/templates/
COPY --chown=www-data:www-data translations/ ${APP_DIR}/translations/

# Copy PHP configuration and command script
COPY .docker/app/php/fpm/php.ini /usr/local/etc/php/php.ini
COPY --chown=www-data:www-data .docker/app/cmd.sh ${APP_DIR}/.docker/app/cmd.sh

# Set working directory and permissions
WORKDIR ${APP_DIR}
RUN chmod +x ${APP_DIR}/.docker/app/cmd.sh && \
    # Ensure cache and logs directories are writable
    mkdir -p var/cache var/log && \
    chown -R www-data:www-data var

# Switch to non-root user
USER www-data

# Run the application
CMD ["/var/www/app/.docker/app/cmd.sh"]
