networks:
  backend:
    driver: bridge

services:
  # Веб-сервер Nginx для обслуживания запросов к приложению
  news_ai_nginx:
    networks:
      - backend
    container_name: news_ai_nginx
    image: nginx:1.29-alpine3.22
    restart: unless-stopped
    ports:
      - "81:80"
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/app
    depends_on:
      - news_ai_app

  # PHP-FPM для запуска PHP приложения
  news_ai_app:
    container_name: news_ai_app
    networks:
      - backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: .docker/app/Dockerfile
    environment:
        - APP_ENV=dev
        - APP_DEBUG=1
        - APP_SECRET=392f5127203b7501096e91e59300268d
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_VERSION=18
        - DATABASE_URL=postgresql://postgres:postgres@news_ai_pg:5432/postgres?serverVersion=18&charset=utf8
        - MESSENGER_TRANSPORT_DSN=amqp://guest:guest@news_ai_rabbitmq:5672/%2f/messages
        - CORS_ALLOW_ORIGIN=^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
    depends_on:
      - news_ai_pg
      - news_ai_rabbitmq
    volumes:
      - ./:/var/www/app
    working_dir: /var/www/app
    extra_hosts:
      - host.docker.internal:host-gateway

  # PostgreSQL база данных
  news_ai_pg:
    container_name: news_ai_pg
    image: postgres:18-alpine3.22
    environment:
        POSTGRES_INITDB_ARGS: "--data-checksums"
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    networks:
      - backend
      - default

  # Redis для кэширования
  news_ai_redis:
    container_name: news_ai_redis
    networks:
      - backend
    image: redis:8.2-alpine3.22
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  # RabbitMQ для обработки очередей сообщений
  news_ai_rabbitmq:
    container_name: news_ai_rabbitmq
    networks:
      - backend
    image: rabbitmq:4.1.4-management-alpine
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq:cached

  # Сервис для периодического парсинга RSS
#  news_ai_rss_parser:
#      container_name: news_ai_rss_parser
#      image: localhost:5000/news-ai-news_ai_app:latest
#      restart: unless-stopped
#      depends_on:
#        - news_ai_app
#      command: >
#        sh -c "while true; do
#          echo 'Running RSS parser...' &&
#          php bin/console app:parse-rss --async &&
#          sleep 60;
#        done"
#      volumes:
#        - ./:/var/www/app
#      environment:
#        - APP_ENV=dev
#      working_dir: /var/www/app
#
#  news_ai_consumer:
#    container_name: news_ai_consumer
#    image: localhost:5000/news-ai-news_ai_app:latest
#    restart: unless-stopped
#    depends_on:
#      - news_ai_app
#    command: >
#      sh -c "while true; do
#        echo 'Running consumer...' &&
#        php bin/console messenger:consume async --memory-limit=128M --time-limit=600;
#      done"
#    volumes:
#      - ./:/var/www/app
#    environment:
#      - APP_ENV=dev
#    working_dir: /var/www/app

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
